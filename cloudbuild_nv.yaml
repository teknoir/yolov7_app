timeout: '18000s'

options:
  env:
    - DOCKER_CLI_EXPERIMENTAL=enabled

steps:
  - id: INIT-BUILDX
    name: gcr.io/cloud-builders/docker
    entrypoint: 'bash'
    args:
      - -c
      - |
        docker run --privileged gcr.io/teknoir/binfmt-qemu:v0.8-v7.0.0
        docker buildx create --name teknoirmultiarchbuilder --use
        docker buildx inspect --bootstrap
    waitFor: ['-']

  - id: BUILD-BASE-IMAGE
    name: gcr.io/cloud-builders/docker
    entrypoint: 'bash'
    args:
      - -c
      - |
        set -eo pipefail
        ./docker-buildx build \
          --builder teknoirmultiarchbuilder \
          --platform=linux/amd64,linux/arm64 \
          --push \
          --label "git-commit=${SHORT_SHA}" \
          -t gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-nv-${SHORT_SHA} \
          -f nv.Dockerfile .

        if [ ${BRANCH_NAME} == 'main' ]; then
          ./docker-buildx build \
            --builder teknoirmultiarchbuilder \
            --platform=linux/amd64,linux/arm64 \
            --push \
            --label "git-commit=${SHORT_SHA}" \
            -t gcr.io/${PROJECT_ID}/yolov7:nv-latest \
            -f nv.Dockerfile .
        fi
    waitFor: ['INIT-BUILDX']

  - id: DL_COCO_NAMES
    name: gcr.io/cloud-builders/wget
    args: ['-qO', 'coco.names', 'https://raw.githubusercontent.com/pjreddie/darknet/master/data/coco.names']
    waitFor: ['-']

  - id: DL_YOLOV7_TINY_PT
    name: gcr.io/cloud-builders/wget
    args: ['-qO', 'yolov7-tiny.pt', 'https://github.com/WongKinYiu/yolov7/releases/download/v0.1/yolov7-tiny.pt']
    waitFor: ['-']

  - id: BUILD-VANILLA-IMAGE-EXAMPLE
    name: gcr.io/cloud-builders/docker
    env:
      - 'DOCKER_CLI_EXPERIMENTAL=enabled'
      - 'PROJECT_ID=${PROJECT_ID}'
      - 'BRANCH_NAME=${BRANCH_NAME}'
      - 'SHORT_SHA=${SHORT_SHA}'
    entrypoint: 'bash'
    args:
      - -c
      - |
        set -eo pipefail
        ./docker-buildx build \
          --builder teknoirmultiarchbuilder \
          --build-arg=BASE_IMAGE=gcr.io/teknoir/yolov7:${BRANCH_NAME}-nv-${SHORT_SHA} \
          --build-arg=MODEL_NAME=yolov7 \
          --build-arg=TRAINING_DATASET=coco \
          --build-arg=IMG_SIZE=640 \
          --build-arg=WEIGHTS_FILE=yolov7-tiny.pt \
          --build-arg=CLASS_NAMES_FILE=coco.names \
          --platform=linux/amd64,linux/arm64 \
          --label "git-commit=${SHORT_SHA}" \
          --push \
          -t gcr.io/${PROJECT_ID}/yolov7-vanilla:${BRANCH_NAME}-nv-${SHORT_SHA} \
          -f ./vanilla.Dockerfile .
        
        if [ ${BRANCH_NAME} == 'main' ]; then
          ./docker-buildx build \
            --builder teknoirmultiarchbuilder \
            --build-arg=BASE_IMAGE=gcr.io/teknoir/yolov7:${BRANCH_NAME}-nv-${SHORT_SHA} \
            --build-arg=MODEL_NAME=yolov7 \
            --build-arg=TRAINING_DATASET=coco \
            --build-arg=IMG_SIZE=640 \
            --build-arg=WEIGHTS_FILE=yolov7-tiny.pt \
            --build-arg=CLASS_NAMES_FILE=coco.names \
            --platform=linux/amd64,linux/arm64 \
            --label "git-commit=${SHORT_SHA}" \
            --push \
            -t gcr.io/${PROJECT_ID}/yolov7-vanilla:nv-latest \
            -f ./vanilla.Dockerfile .
        fi
    waitFor: ['BUILD-BASE-IMAGE', 'DL_COCO_NAMES', 'DL_YOLOV7_TINY_PT']
