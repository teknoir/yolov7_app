timeout: '18000s'

steps:
  - id: l4t_base
    name: gcr.io/teknoir/edgebuild
    env:
      - 'PROJECT_ID=$PROJECT_ID'
      - 'BRANCH_NAME=$BRANCH_NAME'
      - 'SHORT_SHA=$SHORT_SHA'

  - id: coco_names
    name: gcr.io/cloud-builders/wget
    args: ['-qO', 'coco.names', 'https://raw.githubusercontent.com/onnx/models/main/vision/object_detection_segmentation/yolov4/dependencies/coco.names']

  - id: yolov4_pt
    name: gcr.io/cloud-builders/wget
    args: ['-qO', 'yolov7.pt', 'https://github.com/WongKinYiu/yolov7/releases/download/v0.1/yolov7.pt']

  - id: l4t_yolov7_vanilla
    name: gcr.io/cloud-builders/docker
    env:
      - 'DOCKER_CLI_EXPERIMENTAL=enabled'
      - 'PROJECT_ID=$PROJECT_ID'
      - 'BRANCH_NAME=$BRANCH_NAME'
      - 'SHORT_SHA=$SHORT_SHA'
    entrypoint: 'bash'
    args:
      - -c
      - |
        set -eo pipefail
        ./l4t_build_vanilla.sh
    waitFor:
      - l4t_base
      - coco_names
      - yolov4_pt


  - name: 'gcr.io/cloud-builders/docker'
    id: 'amd64'
    entrypoint: 'bash'
    env:
      - 'DOCKER_CLI_EXPERIMENTAL=enabled'
    args:
      - -c
      - |
        docker build -t gcr.io/$PROJECT_ID/yolov7-training:${BRANCH_NAME}-amd64 -f ./amd64.Dockerfile .
        docker push gcr.io/$PROJECT_ID/yolov7-training:${BRANCH_NAME}-amd64

  - name: 'gcr.io/cloud-builders/docker'
    id: 'manifest'
    entrypoint: 'bash'
    env:
      - 'DOCKER_CLI_EXPERIMENTAL=enabled'
    args:
      - -c
      - |
        docker manifest create \
        gcr.io/$PROJECT_ID/yolov7-training:${BRANCH_NAME}-${SHORT_SHA} \
        gcr.io/$PROJECT_ID/yolov7-training:${BRANCH_NAME}-amd64
      
        docker manifest annotate \
        gcr.io/$PROJECT_ID/yolov7-training:${BRANCH_NAME}-${SHORT_SHA} \
        gcr.io/$PROJECT_ID/yolov7-training:${BRANCH_NAME}-amd64 \
        --os=linux

        docker manifest push gcr.io/$PROJECT_ID/yolov7-training:${BRANCH_NAME}-${SHORT_SHA}
    waitFor: ['amd64']
