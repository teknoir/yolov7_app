timeout: '18000s'

options:
  env:
    - DOCKER_CLI_EXPERIMENTAL=enabled

steps:
  - id: initialize-buildx
    name: gcr.io/cloud-builders/docker
    entrypoint: 'bash'
    args:
      - -c
      - |
        docker run --privileged gcr.io/teknoir/binfmt-qemu:v0.8-v7.0.0
        docker buildx create --name mybuilder --use
        docker buildx inspect --bootstrap
    waitFor: ['-']

  - id: amd64
    name: gcr.io/cloud-builders/docker
    entrypoint: 'bash'
    args:
      - -c
      - |
        set -eo pipefail
        docker build -t gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-amd64-${SHORT_SHA} --label "git-commit=${SHORT_SHA}" .
        docker tag gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-amd64-${SHORT_SHA} gcr.io/${PROJECT_ID}/yolov7:amd64
        docker push gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-amd64-${SHORT_SHA}
        docker push gcr.io/${PROJECT_ID}/yolov7:amd64
    waitFor: ['-']

  - id: arm64
    name: gcr.io/cloud-builders/docker
    entrypoint: 'bash'
    args:
      - -c
      - |
        set -eo pipefail
        docker buildx build \
          --platform=linux/arm64 \
          --push \
          --label "git-commit=${SHORT_SHA}" \
          -t gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-arm64-${SHORT_SHA} \
          -t gcr.io/${PROJECT_ID}/yolov7:arm64 \
          .
    waitFor: ['initialize-buildx']

  - id: manifest
    name: gcr.io/cloud-builders/docker
    entrypoint: 'bash'
    args:
      - -c
      - |
        set -eo pipefail
        docker manifest create \
        gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-${SHORT_SHA} \
        gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-amd64-${SHORT_SHA} \
        gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-arm64-${SHORT_SHA}

        docker manifest annotate \
        gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-${SHORT_SHA} \
        gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-amd64-${SHORT_SHA} \
        --os=linux

        docker manifest annotate \
        gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-${SHORT_SHA} \
        gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-arm64-${SHORT_SHA} \
        --os=linux \
        --arch=arm64 \
        --variant=v8

        docker manifest push gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-${SHORT_SHA}

        if [ ${BRANCH_NAME} == 'main' ]; then
          docker manifest create \
          gcr.io/${PROJECT_ID}/yolov7:latest \
          gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-amd64-${SHORT_SHA} \
          gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-arm64-${SHORT_SHA}

          docker manifest annotate \
          gcr.io/${PROJECT_ID}/yolov7:latest \
          gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-amd64-${SHORT_SHA} \
          --os=linux

          docker manifest annotate \
          gcr.io/${PROJECT_ID}/yolov7:latest \
          gcr.io/${PROJECT_ID}/yolov7:${BRANCH_NAME}-arm64-${SHORT_SHA} \
          --os=linux \
          --arch=arm64 \
          --variant=v8

          docker manifest push gcr.io/${PROJECT_ID}/yolov7:latest
        fi
    waitFor:
      - amd64
      - arm64

  - id: coco_names
    name: gcr.io/cloud-builders/wget
    args: ['-qO', 'coco.names', 'https://raw.githubusercontent.com/onnx/models/main/vision/object_detection_segmentation/yolov4/dependencies/coco.names']
    waitFor: ['-']

  - id: yolov4_pt
    name: gcr.io/cloud-builders/wget
    args: ['-qO', 'yolov7.pt', 'https://github.com/WongKinYiu/yolov7/releases/download/v0.1/yolov7.pt']
    waitFor: ['-']

  - id: yolov7_vanilla
    name: gcr.io/cloud-builders/docker
    env:
      - 'DOCKER_CLI_EXPERIMENTAL=enabled'
      - 'PROJECT_ID=${PROJECT_ID}'
      - 'BRANCH_NAME=${BRANCH_NAME}'
      - 'SHORT_SHA=${SHORT_SHA}'
    entrypoint: 'bash'
    args:
      - -c
      - |
        set -eo pipefail
        ./build_vanilla.sh
    waitFor:
      - manifest
      - coco_names
      - yolov4_pt 